#import "WKWebViewJavascriptBridgeJS.h"

NSString * const WKWebViewJavascriptBridgeJS = @";(function() {\n"
    "    if (window.WKWebViewJavascriptBridge) {\n"
    "        return;\n"
    "    }\n"
    "\n"
    "    if (!window.onerror) {\n"
    "        window.onerror = function(msg, url, line) {\n"
    "            console.log(\"WKWebViewJavascriptBridge: ERROR:\" + msg + \"@\" + url + \":\" + line);\n"
    "        }\n"
    "    }\n"
    "    window.WKWebViewJavascriptBridge = {\n"
    "        registerHandler: registerHandler,\n"
    "        callHandler: callHandler,\n"
    "        _fetchQueue: _fetchQueue,\n"
    "        _handleMessageFromiOS: _handleMessageFromiOS\n"
    "    };\n"
    "\n"
    "    var sendMessageQueue = [];\n"
    "    var messageHandlers = {};\n"
    "\n"
    "    var responseCallbacks = {};\n"
    "    var uniqueId = 1;\n"
    "\n"
    "    function registerHandler(handlerName, handler) {\n"
    "        messageHandlers[handlerName] = handler;\n"
    "    }\n"
    "\n"
    "    function callHandler(handlerName, data, responseCallback) {\n"
    "        if (arguments.length == 2 && typeof data == 'function') {\n"
    "            responseCallback = data;\n"
    "            data = null;\n"
    "        }\n"
    "        _doSend({ handlerName:handlerName, data:data }, responseCallback);\n"
    "    }\n"
    "\n"
    "    function _doSend(message, responseCallback) {\n"
    "        if (responseCallback) {\n"
    "            var callbackID = 'cb_'+(uniqueId++)+'_'+new Date().getTime();\n"
    "            responseCallbacks[callbackID] = responseCallback;\n"
    "            message['callbackID'] = callbackID;\n"
    "        }\n"
    "        sendMessageQueue.push(message);\n"
    "        window.webkit.messageHandlers.iOS_Native_FlushMessageQueue.postMessage(null)\n"
    "    }\n"
    "\n"
    "    function _fetchQueue() {\n"
    "        var messageQueueString = JSON.stringify(sendMessageQueue);\n"
    "        sendMessageQueue = [];\n"
    "        return messageQueueString;\n"
    "    }\n"
    "\n"
    "    function _dispatchMessageFromiOS(messageJSON) {\n"
    "        var message = JSON.parse(messageJSON);\n"
    "        var messageHandler;\n"
    "        var responseCallback;\n"
    "\n"
    "        if (message.responseID) {\n"
    "            responseCallback = responseCallbacks[message.responseID];\n"
    "            if (!responseCallback) {\n"
    "                return;\n"
    "            }\n"
    "            responseCallback(message.responseData);\n"
    "            delete responseCallbacks[message.responseID];\n"
    "        } else {\n"
    "            if (message.callbackID) {\n"
    "                var callbackResponseId = message.callbackID;\n"
    "                responseCallback = function(responseData) {\n"
    "                    _doSend({ handlerName:message.handlerName, responseID:callbackResponseId, responseData:responseData });\n"
    "                };\n"
    "            }\n"
    "\n"
    "            var handler = messageHandlers[message.handlerName];\n"
    "            if (!handler) {\n"
    "                console.log(\"WKWebViewJavascriptBridge: WARNING: no handler for message from iOS:\", message);\n"
    "            } else {\n"
    "                handler(message.data, responseCallback);\n"
    "            }\n"
    "        }\n"
    "    }\n"
    "\n"
    "    function _handleMessageFromiOS(messageJSON) {\n"
    "        _dispatchMessageFromiOS(messageJSON);\n"
    "    }\n"
    "\n"
    "    setTimeout(_callWVJBCallbacks, 0);\n"
    "    function _callWVJBCallbacks() {\n"
    "        var callbacks = window.WKWVJBCallbacks;\n"
    "        delete window.WKWVJBCallbacks;\n"
    "        for (var i = 0; i < callbacks.length; i++) {\n"
    "            callbacks[i](WKWebViewJavascriptBridge);\n"
    "        }\n"
    "    }\n"
    "})();"; 
